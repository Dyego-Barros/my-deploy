# values.yaml para Grafana e Prometheus no mesmo chart

# Configuração do Prometheus
prometheus:
  replicaCount: 1
  image:
    repository: prom/prometheus
    tag: "v2.33.1"  # Ajustado para sua versão específica
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 9090

  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"

  persistence:
    enabled: true
    size: 10Gi
    storageClassName: local-storage  # Ajustado para o seu storageClass
    accessMode: ReadWriteOnce

  alertmanager:
    enabled: true
    replicaCount: 1
    image:
      repository: prom/alertmanager
      tag: "v0.24.0"
    service:
      type: ClusterIP
      port: 9093

  # Configuração do scrape do Prometheus
  scrapeConfigs:
    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
        - role: endpoints

# Configuração do Grafana
grafana:
  replicaCount: 1
  image:
    repository: grafana/grafana
    tag: "latest"  # Usei a tag 'latest', mas pode ser ajustada para uma versão específica
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 3000  # Alterei para 3000, conforme o seu exemplo anterior

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - grafana.meuteste.com  # Ajustado para o domínio fornecido
    tls: []

  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"

  env:
    GF_SECURITY_ADMIN_PASSWORD: "admin123"
    GF_SECURITY_ADMIN_USER: "admin"
    GF_DATASOURCE_PROXY_URL: "http://prometheus-operated:9090"  # URL do Prometheus para o Grafana

  persistence:
    enabled: true
    size: 10Gi
    storageClassName: local-storage  # Ajustado para o seu storageClass
    accessMode: ReadWriteOnce
    existingClaim: ""
    mountPath: /var/lib/grafana

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /etc/grafana/provisioning/dashboards

  dashboards:
    default:
      example-dashboard:
        gnetId: 1234  # Exemplo de um dashboard, altere para o ID correto
        name: Example Dashboard
        folder: ""
        enabled: true
        datasource: Prometheus  # Usando o Prometheus como fonte de dados

# Global scheduling options
nodeSelector: {}

tolerations: []

affinity: {}
